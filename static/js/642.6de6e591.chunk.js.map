{"version":3,"file":"static/js/642.6de6e591.chunk.js","mappings":"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","sources":["containers/KeyPad/index.js","containers/History/index.js","screens/Home/index.js"],"sourcesContent":["import React from \"react\";\nimport { CONTROL_BUTTONS } from \"../../constants/buttons\";\nimport ControlButton from \"../../components/ControlButton\";\nimport Panel from \"./styled\";\n\nclass KeyPad extends React.PureComponent {\n  render() {\n    const { onPressKey } = this.props;\n    return (\n      <Panel>\n        {CONTROL_BUTTONS.map((button) => (\n          <ControlButton\n            key={button}\n            type=\"button\"\n            onClick={onPressKey(button)}\n            text={button}\n          />\n        ))}\n      </Panel>\n    );\n  }\n}\n\nexport default KeyPad;\n","import React from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport { HistoryButton, ScrollDiv, Title } from \"./styled\";\n\nclass History extends React.Component {\n  onNoteClick = (note) => () => {\n    const { setExample } = this.props;\n    setExample(note.example);\n  };\n\n  render() {\n    const { t, history, updateHistory } = this.props;\n    return (\n      <ScrollDiv>\n        <Title>{t(\"names.history\")}</Title>\n        {history.map((note) => (\n          <HistoryButton\n            type=\"button\"\n            key={note.id}\n            onClick={this.onNoteClick(note)}\n          >\n            {note.example}\n          </HistoryButton>\n        ))}\n        {history.length > 0 && (\n          <HistoryButton type=\"button\" onClick={() => updateHistory([])}>\n            {t(\"names.clear\")}\n          </HistoryButton>\n        )}\n      </ScrollDiv>\n    );\n  }\n}\n\nexport default withTranslation()(History);\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { withTranslation } from \"react-i18next\";\nimport {\n  getHistoryFromStorage,\n  saveHistoryToStorage,\n} from \"../../helpers/localStorage/history\";\nimport solveExample from \"../../helpers/calculation/solveExample\";\nimport updateLine from \"../../helpers/updateLine\";\nimport { Container, Wrapper } from \"./styled\";\nimport Display from \"../../components/Display\";\nimport KeyPad from \"../../containers/KeyPad\";\nimport History from \"../../containers/History\";\nimport Modal from \"../../components/Modal\";\nimport MessageBox from \"../../components/MessageBox\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      example: \"0\",\n      history: getHistoryFromStorage(),\n      message: \"\",\n      isError: false,\n    };\n  }\n\n  onPressKey = (value) => () => {\n    const { example, history } = this.state;\n    const { t } = this.props;\n    if (value === \"=\") {\n      const result = solveExample(example);\n      if (Number.isFinite(result)) {\n        this.setState({ example: result.toString() });\n        this.updateHistory([\n          ...history,\n          {\n            id: uuidv4(),\n            example,\n          },\n        ]);\n      } else {\n        this.setError(`${t(\"error.wrong\")} ${result}`);\n        this.setState({ example: \"0\" });\n      }\n    } else {\n      const line = updateLine(example, value);\n      if (line.length >= 16) {\n        this.setError(`${t(\"error.length\")}`);\n      } else {\n        this.setState({ example: line });\n      }\n    }\n  };\n\n  setExample = (example) => {\n    this.setState({ example });\n  };\n\n  setIsError = (isError) => {\n    this.setState({ isError });\n  };\n\n  setError = (message) => {\n    this.setIsError(true);\n    this.setState({ message });\n  };\n\n  updateHistory = (history) => {\n    this.setState({ history });\n    saveHistoryToStorage(history);\n  };\n\n  render() {\n    const { example, history, isError, message } = this.state;\n    return (\n      <Container>\n        <Wrapper>\n          <Display text={example} />\n          <KeyPad onPressKey={this.onPressKey} />\n        </Wrapper>\n        <History\n          history={history}\n          setExample={this.setExample}\n          updateHistory={this.updateHistory}\n        />\n        <Modal active={isError} setActive={this.setIsError}>\n          <MessageBox message={message} />\n        </Modal>\n      </Container>\n    );\n  }\n}\n\nexport default withTranslation()(Home);\n"],"names":["KeyPad","onPressKey","this","props","CONTROL_BUTTONS","button","ControlButton","type","onClick","text","React","History","onNoteClick","note","setExample","example","t","history","updateHistory","map","id","length","withTranslation","Home","value","state","result","solveExample","Number","isFinite","setState","toString","uuidv4","setError","line","updateLine","setIsError","isError","message","saveHistoryToStorage","getHistoryFromStorage","Display","Modal","active","setActive","MessageBox"],"sourceRoot":""}