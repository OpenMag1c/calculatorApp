{"version":3,"file":"static/js/936.5d16a8d5.chunk.js","mappings":"iMAEO,SAASA,IACd,OAAO,cAAGC,UAAU,yCAGf,SAASC,IACd,OAAO,cAAGD,UAAU,4B,uKCLTE,GAAoBC,EAAAA,EAAAA,IAAO,MAAPA,CAAH,iFAMjBC,GAAiBD,EAAAA,EAAAA,IAAO,MAAPA,CAAH,gKAIL,qBAAGE,MAAkBC,OAAOC,SAKrCC,GAAwBL,EAAAA,EAAAA,IAAO,MAAPA,CAAH,sBAErBM,GAAeN,EAAAA,EAAAA,IAAO,KAAPA,CAAH,4HAGH,qBAAGE,MAAkBC,OAAOC,SAKrCG,GAAWP,EAAAA,EAAAA,IAAO,KAAPA,CAAH,qJAMH,qBAAGE,MAAkBC,OAAOK,Q,SCvB9C,SAASC,EAAT,GAA2D,IAAnCC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACzC,GAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KASA,OACE,UAAChB,EAAD,YACE,UAACE,EAAD,CAAgBe,QATH,kBAAMD,GAAWD,IAS9B,UACGH,EAASM,MACV,SAAC,IAAD,OAEDH,IACC,SAACT,EAAD,WACE,SAACC,EAAD,UACGI,EAAQQ,KAAI,SAACC,GAAD,OACX,SAACZ,EAAD,CAA0BS,SAfbI,EAesCD,EAf5B,WACjCP,EAAYQ,GACZL,GAAU,KAaA,SACGI,EAAOF,MADKE,EAAOE,IAfV,IAACD,YA0B3B,I,MAAA,EAAeE,EAAAA,KAAWb,G,qDCvCbc,EAAUvB,EAAAA,GAAAA,IAAH,qDAKPwB,EAAQxB,EAAAA,GAAAA,GAAH,0DACP,qBAAGE,MAAkBC,OAAOC,SCKjCqB,GDDqBzB,EAAAA,GAAAA,OAAH,gFCClByB,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,WAAYC,GAAQ,IAAD,yBACjB,cAAMA,IACDC,MAAQ,CACXzB,OAAO0B,EAAAA,EAAAA,KACPC,UAAUC,EAAAA,EAAAA,MAEZ,EAAKC,eAAiB,EAAKA,eAAeC,MAApB,WACtB,EAAKC,YAAc,EAAKA,YAAYD,MAAjB,WAPF,EAwClB,OAhCA,sCAED,SAAeH,GACbK,KAAKC,SAAS,CAAEN,SAAAA,KAChBO,EAAAA,EAAAA,GAAsBP,GACLK,KAAKR,MAAdW,KACHN,eAAeF,EAASR,MAC9B,yBAED,SAAYnB,GACVgC,KAAKI,QAAQpC,GACbgC,KAAKC,SAAS,CAAEjC,MAAAA,MACjB,oBAED,WACE,MAA4BgC,KAAKP,MAAzBzB,EAAR,EAAQA,MAAO2B,EAAf,EAAeA,SACPU,EAAML,KAAKR,MAAXa,EACR,OACE,UAAChB,EAAD,YACE,SAACC,EAAD,UAAQe,EAAE,sBACV,SAACC,EAAD,CACE9B,QAAS+B,EAAAA,EACT9B,SAAUT,EACVU,YAAasB,KAAKD,eAEpB,SAACO,EAAD,CACE9B,QAASgC,EAAAA,EACT/B,SAAUkB,EACVjB,YAAasB,KAAKH,wBAIzB,EAzCGN,CAAiBH,EAAAA,YA4CvBG,EAASkB,YAAcC,EAAAA,EAEvB,OAAeC,EAAAA,EAAAA,IAAf,CAAiCpB","sources":["components/icons/index.jsx","components/DropDown/components.js","components/DropDown/index.jsx","pages/Settings/components.js","pages/Settings/index.js"],"sourcesContent":["import React from \"react\";\n\nexport function IconError() {\n  return <i className=\"fa-solid fa-circle-exclamation fa-3x\" />;\n}\n\nexport function IconDownArrow() {\n  return <i className=\"fa-solid fa-sort-down\" />;\n}\n","import styled from \"styled-components\";\n\nexport const DropDownContainer = styled(\"div\")`\n  width: 10.5em;\n  margin: 1rem 0;\n  cursor: pointer;\n`;\n\nexport const DropDownHeader = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  padding: 1rem;\n  border: 1px solid ${({ theme }) => theme.colors.black};\n  color: black;\n  background: white;\n`;\n\nexport const DropDownListContainer = styled(\"div\")``;\n\nexport const DropDownList = styled(\"ul\")`\n  margin: 0;\n  background: white;\n  border: 1px solid ${({ theme }) => theme.colors.black};\n  border-top: none;\n  color: black;\n`;\n\nexport const ListItem = styled(\"li\")`\n  list-style: none;\n  padding: 1rem;\n  transition: 0.2s all;\n\n  &:hover {\n    background: ${({ theme }) => theme.colors.dark};\n    color: white;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { IconDownArrow } from \"components/icons\";\nimport {\n  DropDownContainer,\n  DropDownHeader,\n  DropDownList,\n  DropDownListContainer,\n  ListItem,\n} from \"./components\";\n\nfunction DropDownMenu({ options, selected, setSelected }) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggling = () => setIsOpen(!isOpen);\n\n  const onOptionClicked = (value) => () => {\n    setSelected(value);\n    setIsOpen(false);\n  };\n\n  return (\n    <DropDownContainer>\n      <DropDownHeader onClick={toggling}>\n        {selected.name}\n        <IconDownArrow />\n      </DropDownHeader>\n      {isOpen && (\n        <DropDownListContainer>\n          <DropDownList>\n            {options.map((option) => (\n              <ListItem key={option.id} onClick={onOptionClicked(option)}>\n                {option.name}\n              </ListItem>\n            ))}\n          </DropDownList>\n        </DropDownListContainer>\n      )}\n    </DropDownContainer>\n  );\n}\n\nexport default React.memo(DropDownMenu);\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  flex: 1;\n  margin: 5rem;\n`;\n\nexport const Title = styled.h1`\n  color: ${({ theme }) => theme.colors.black};\n  margin: 2rem 0;\n`;\n\nexport const SelectTheme = styled.select`\n  padding: 1rem;\n  outline: none;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport DropDownMenu from \"components/DropDown\";\nimport { themes } from \"settings/themes\";\nimport { languages } from \"settings/languages\";\nimport {\n  getLanguageFromStorage,\n  saveLanguageToStorage,\n} from \"helpers/localStorage/language\";\nimport { getThemeFromStorage } from \"helpers/localStorage/theme\";\nimport ThemeContext from \"helpers/themeContext\";\nimport { withTranslation } from \"react-i18next\";\nimport { Wrapper, Title } from \"./components\";\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: getThemeFromStorage(),\n      language: getLanguageFromStorage(),\n    };\n    this.changeLanguage = this.changeLanguage.bind(this);\n    this.changeTheme = this.changeTheme.bind(this);\n  }\n\n  changeLanguage(language) {\n    this.setState({ language });\n    saveLanguageToStorage(language);\n    const { i18n } = this.props;\n    i18n.changeLanguage(language.id);\n  }\n\n  changeTheme(theme) {\n    this.context(theme);\n    this.setState({ theme });\n  }\n\n  render() {\n    const { theme, language } = this.state;\n    const { t } = this.props;\n    return (\n      <Wrapper>\n        <Title>{t(\"routes.settings\")}</Title>\n        <DropDownMenu\n          options={themes}\n          selected={theme}\n          setSelected={this.changeTheme}\n        />\n        <DropDownMenu\n          options={languages}\n          selected={language}\n          setSelected={this.changeLanguage}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nSettings.contextType = ThemeContext;\n\nexport default withTranslation()(Settings);\n"],"names":["IconError","className","IconDownArrow","DropDownContainer","styled","DropDownHeader","theme","colors","black","DropDownListContainer","DropDownList","ListItem","dark","DropDownMenu","options","selected","setSelected","useState","isOpen","setIsOpen","onClick","name","map","option","value","id","React","Wrapper","Title","Settings","props","state","getThemeFromStorage","language","getLanguageFromStorage","changeLanguage","bind","changeTheme","this","setState","saveLanguageToStorage","i18n","context","t","DropDown","themes","languages","contextType","ThemeContext","withTranslation"],"sourceRoot":""}