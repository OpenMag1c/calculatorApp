{"version":3,"file":"static/js/627.d911ae70.chunk.js","mappings":"4LAcA,EAZwB,WACtB,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAOA,MAAO,CAAEH,QAAAA,EAASI,SALD,SAACC,GAChBF,GAAW,GACXF,EAAWI,IAGeH,QAAAA,EAASC,WAAAA,I,4DC0CvC,EA1CuB,SAACC,GACtB,OAA8BL,EAAAA,EAAAA,UAAS,KAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KACA,GAA8BR,EAAAA,EAAAA,WAAS,kBAAMS,EAAAA,EAAAA,QAA7C,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAMC,EAAAA,EAAAA,KAAND,EAEFE,EAAgB,SAACC,GACrBJ,EAAWI,IACXC,EAAAA,EAAAA,GAAqBD,IAGjBE,GAAaC,EAAAA,EAAAA,cACjB,SAACC,GAAD,OAAW,WACT,GAAc,MAAVA,EAAe,CACjB,IAAMC,GAASC,EAAAA,EAAAA,GAAad,GACxBe,OAAOC,SAASH,IAClBZ,EAAWY,EAAOI,YAClBV,EAAc,GAAD,eACRJ,GADQ,CAEX,CACEe,IAAIC,EAAAA,EAAAA,KACJnB,QAAAA,QAIJF,EAAS,GAAD,OAAIO,EAAE,eAAN,YAAwBQ,IAChCZ,EAAW,UAER,CACL,IAAMmB,GAAOC,EAAAA,EAAAA,GAAWrB,EAASY,GAC7BQ,EAAKE,QAAU,GACjBxB,EAAS,GAAD,OAAIO,EAAE,kBAEdJ,EAAWmB,OAIjB,CAACpB,EAASG,IAGZ,MAAO,CAAEH,QAAAA,EAASC,WAAAA,EAAYE,QAAAA,EAASI,cAAAA,EAAeG,WAAAA,I,2DC9BxD,EAfe,SAAC,GAAoB,IAAlBA,EAAiB,EAAjBA,WAChB,OACE,SAAC,IAAD,UACGa,EAAAA,EAAAA,KAAoB,SAACC,GAAD,OACnB,SAACC,EAAA,EAAD,CAEEC,KAAK,SACLC,QAASjB,EAAWc,GACpBzB,KAAMyB,GAHDA,S,UCoBf,EA1BgB,SAAC,GAA4C,IAA1CrB,EAAyC,EAAzCA,QAASF,EAAgC,EAAhCA,WAAYM,EAAoB,EAApBA,cAC9BF,GAAMC,EAAAA,EAAAA,KAAND,EACFuB,EAAc,SAACC,GAAD,OAAU,WAC5B5B,EAAW4B,EAAK7B,WAMlB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAQK,EAAE,mBACTF,EAAQ2B,KAAI,SAACD,GAAD,OACX,SAAC,KAAD,CAAeH,KAAK,SAAuBC,QAASC,EAAYC,GAAhE,SACGA,EAAK7B,SAD0B6B,EAAKX,OAIxCf,EAAQmB,OAAS,IAChB,SAAC,KAAD,CAAeI,KAAK,SAASC,QAbd,WACnBpB,EAAc,KAYV,SACGF,EAAE,qB,oBCUb,EAvBa,WACX,MAAmD0B,IAA3CrC,EAAR,EAAQA,QAASI,EAAjB,EAAiBA,SAAUD,EAA3B,EAA2BA,WAAYD,EAAvC,EAAuCA,QACvC,EACEoC,EAAelC,GADTE,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAAYE,EAA7B,EAA6BA,QAASI,EAAtC,EAAsCA,cAAeG,EAArD,EAAqDA,WAGrD,OACE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAACuB,EAAA,EAAD,CAASlC,KAAMC,KACf,SAAC,EAAD,CAAQU,WAAYA,QAEtB,SAAC,EAAD,CACEP,QAASA,EACTF,WAAYA,EACZM,cAAeA,KAEjB,SAAC2B,EAAA,EAAD,CAAOC,OAAQvC,EAASwC,UAAWvC,EAAnC,UACE,SAACwC,EAAA,EAAD,CAAY3C,QAASA","sources":["hooks/useErrorMessage.js","hooks/useCalculation.js","containers/KeyPad/indexFC.jsx","containers/History/indexFC.jsx","screens/Home/indexFC.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst useErrorMessage = () => {\n  const [message, setMessage] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n\n  const setError = (text) => {\n    setIsError(true);\n    setMessage(text);\n  };\n\n  return { message, setError, isError, setIsError };\n};\n\nexport default useErrorMessage;\n","import { useCallback, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { useTranslation } from \"react-i18next\";\nimport {\n  getHistoryFromStorage,\n  saveHistoryToStorage,\n} from \"../helpers/localStorage/history\";\nimport solveExample from \"../helpers/calculation/solveExample\";\nimport updateLine from \"../helpers/updateLine\";\n\nconst useCalculation = (setError) => {\n  const [example, setExample] = useState(\"0\");\n  const [history, setHistory] = useState(() => getHistoryFromStorage());\n  const { t } = useTranslation();\n\n  const updateHistory = (newHistory) => {\n    setHistory(newHistory);\n    saveHistoryToStorage(newHistory);\n  };\n\n  const onPressKey = useCallback(\n    (value) => () => {\n      if (value === \"=\") {\n        const result = solveExample(example);\n        if (Number.isFinite(result)) {\n          setExample(result.toString());\n          updateHistory([\n            ...history,\n            {\n              id: uuidv4(),\n              example,\n            },\n          ]);\n        } else {\n          setError(`${t(\"error.wrong\")} ${result}`);\n          setExample(\"0\");\n        }\n      } else {\n        const line = updateLine(example, value);\n        if (line.length >= 16) {\n          setError(`${t(\"error.length\")}`);\n        } else {\n          setExample(line);\n        }\n      }\n    },\n    [example, history]\n  );\n\n  return { example, setExample, history, updateHistory, onPressKey };\n};\n\nexport default useCalculation;\n","import React from \"react\";\nimport { CONTROL_BUTTONS } from \"../../constants/buttons\";\nimport ControlButton from \"../../components/ControlButton\";\nimport Panel from \"./styled\";\n\nconst KeyPad = ({ onPressKey }) => {\n  return (\n    <Panel>\n      {CONTROL_BUTTONS.map((button) => (\n        <ControlButton\n          key={button}\n          type=\"button\"\n          onClick={onPressKey(button)}\n          text={button}\n        />\n      ))}\n    </Panel>\n  );\n};\n\nexport default KeyPad;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { HistoryButton, ScrollDiv, Title } from \"./styled\";\n\nconst History = ({ history, setExample, updateHistory }) => {\n  const { t } = useTranslation();\n  const onNoteClick = (note) => () => {\n    setExample(note.example);\n  };\n  const clearHistory = () => {\n    updateHistory([]);\n  };\n\n  return (\n    <ScrollDiv>\n      <Title>{t(\"names.history\")}</Title>\n      {history.map((note) => (\n        <HistoryButton type=\"button\" key={note.id} onClick={onNoteClick(note)}>\n          {note.example}\n        </HistoryButton>\n      ))}\n      {history.length > 0 && (\n        <HistoryButton type=\"button\" onClick={clearHistory}>\n          {t(\"names.clear\")}\n        </HistoryButton>\n      )}\n    </ScrollDiv>\n  );\n};\n\nexport default History;\n","import React from \"react\";\nimport useErrorMessage from \"../../hooks/useErrorMessage\";\nimport useCalculation from \"../../hooks/useCalculation\";\nimport { Container, Wrapper } from \"./styled\";\nimport Display from \"../../components/Display\";\nimport KeyPad from \"../../containers/KeyPad/indexFC\";\nimport History from \"../../containers/History/indexFC\";\nimport Modal from \"../../components/Modal\";\nimport MessageBox from \"../../components/MessageBox\";\n\nconst Home = () => {\n  const { message, setError, setIsError, isError } = useErrorMessage();\n  const { example, setExample, history, updateHistory, onPressKey } =\n    useCalculation(setError);\n\n  return (\n    <Container>\n      <Wrapper>\n        <Display text={example} />\n        <KeyPad onPressKey={onPressKey} />\n      </Wrapper>\n      <History\n        history={history}\n        setExample={setExample}\n        updateHistory={updateHistory}\n      />\n      <Modal active={isError} setActive={setIsError}>\n        <MessageBox message={message} />\n      </Modal>\n    </Container>\n  );\n};\n\nexport default Home;\n"],"names":["useState","message","setMessage","isError","setIsError","setError","text","example","setExample","getHistoryFromStorage","history","setHistory","t","useTranslation","updateHistory","newHistory","saveHistoryToStorage","onPressKey","useCallback","value","result","solveExample","Number","isFinite","toString","id","uuidv4","line","updateLine","length","CONTROL_BUTTONS","button","ControlButton","type","onClick","onNoteClick","note","map","useErrorMessage","useCalculation","Display","Modal","active","setActive","MessageBox"],"sourceRoot":""}